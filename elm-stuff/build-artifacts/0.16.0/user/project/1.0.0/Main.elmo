Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values) return _elm.Main.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Effects = Elm.Effects.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $Http = Elm.Http.make(_elm),
   $Json$Decode = Elm.Json.Decode.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp = Elm.StartApp.make(_elm),
   $Task = Elm.Task.make(_elm);
   var _op = {};
   var decodeCardUrl = A2($Json$Decode.at,_U.list(["name"]),$Json$Decode.string);
   var nameUrl = function (name) {    return A2($Http.url,"https://api.deckbrew.com/mtg/cards",_U.list([{ctor: "_Tuple2",_0: "name",_1: name}]));};
   var NewCard = function (a) {    return {ctor: "NewCard",_0: a};};
   var getCardInfo = function (name) {    return $Effects.task(A2($Task.map,NewCard,$Task.toMaybe(A2($Http.get,decodeCardUrl,nameUrl(name)))));};
   var RequestCard = {ctor: "RequestCard"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A2($Html.h2,_U.list([]),_U.list([$Html.text(model.name)]))
              ,A2($Html.button,_U.list([A2($Html$Events.onClick,address,RequestCard)]),_U.list([$Html.text("Find Card")]))]));
   });
   var Model = F2(function (a,b) {    return {name: a,cardUrl: b};});
   var init = function (name) {    return {ctor: "_Tuple2",_0: A2(Model,name,"About Face"),_1: getCardInfo(name)};};
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "RequestCard") {
            return {ctor: "_Tuple2",_0: model,_1: getCardInfo(model.name)};
         } else {
            return {ctor: "_Tuple2",_0: A2(Model,model.name,A2($Maybe.withDefault,model.cardUrl,_p0._0)),_1: $Effects.none};
         }
   });
   var app = $StartApp.start({init: init("About Face"),update: update,view: view,inputs: _U.list([])});
   var main = app.html;
   var tasks = Elm.Native.Task.make(_elm).performSignal("tasks",app.tasks);
   return _elm.Main.values = {_op: _op
                             ,Model: Model
                             ,init: init
                             ,RequestCard: RequestCard
                             ,NewCard: NewCard
                             ,update: update
                             ,getCardInfo: getCardInfo
                             ,nameUrl: nameUrl
                             ,decodeCardUrl: decodeCardUrl
                             ,app: app
                             ,main: main
                             ,view: view};
};